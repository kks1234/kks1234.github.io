{"meta":{"title":"kks1234的博客","subtitle":"博客","description":"","author":"kks1234","url":"http://kks1234.xyz","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2022-06-07T17:01:22.415Z","updated":"2022-06-07T17:01:22.415Z","comments":false,"path":"/404.html","permalink":"http://kks1234.xyz/404.html","excerpt":"","text":""},{"title":"关于","date":"2022-06-07T17:01:22.415Z","updated":"2022-06-07T17:01:22.415Z","comments":false,"path":"about/index.html","permalink":"http://kks1234.xyz/about/index.html","excerpt":"","text":"博主21届研究生在读，从事计算机技术开发。"},{"title":"分类","date":"2022-06-07T17:01:22.415Z","updated":"2022-06-07T17:01:22.415Z","comments":false,"path":"categories/index.html","permalink":"http://kks1234.xyz/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2022-06-07T17:01:22.415Z","updated":"2022-06-07T17:01:22.415Z","comments":true,"path":"links/index.html","permalink":"http://kks1234.xyz/links/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2022-06-07T17:01:22.415Z","updated":"2022-06-07T17:01:22.415Z","comments":false,"path":"repository/index.html","permalink":"http://kks1234.xyz/repository/index.html","excerpt":"","text":"Repository Info (This will override ‘github’ option)项目仓库展示信息（将会覆盖 github 项）repository: platform: github # 托管平台（github | gitee） username: kks1234 # 用户名"},{"title":"标签","date":"2022-06-07T17:01:22.415Z","updated":"2022-06-07T17:01:22.415Z","comments":false,"path":"tags/index.html","permalink":"http://kks1234.xyz/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"00Hadoop集群搭建之模板系统","slug":"大数据/hadoop搭建/00集群搭建1_repo","date":"2022-06-07T00:00:00.000Z","updated":"2022-06-07T17:01:22.415Z","comments":true,"path":"posts/3732411068.html","link":"","permalink":"http://kks1234.xyz/posts/3732411068.html","excerpt":"","text":"Hadoop集群搭建之模板系统模板虚拟机环境准备 安装模板虚拟机，IP 地址 192.168.88.100、 主机名称 hadoop100、内存 6G、 硬盘 100G(根据自己的机器情况配置) hadoop100 虚拟机配置要求如下（本文 Linux 系统全部以 CentOS-7-x86_64-DVD-2009.iso 为例 ） （清华镜像地址：https://mirrors.tuna.tsinghua.edu.cn/centos/7.9.2009/isos/x86_64/） VMware虚拟机安装本人在服务器操作VMware为英文版 点击创建一个虚拟机 选择高级安装，点击next 以下显示的是版本兼容性，直接点击next 下一步选择稍后安装系统，点击next 选择Linux系统，cnetos7 64 位，点击next 设置虚拟机名字，设置为Hadoop100，存储位置设置为自己想保存的文件夹，点击next 设置虚拟机CPU配置，点击next 设置虚拟机内存，由于内存较多所以设置6G，内存不足可以设置为2G-4G，点击next 选择网络连接模式，在这里配置为net模式(模式具体区别可自行百度)，点击next 选择默认推荐模式，点击next 选择新建虚拟磁盘，点击next 修改创建磁盘大小，最好50G以上，该模式不会直接占用50G，而是代表最大占用50G，点击next 将虚拟机保存至刚才的目录，点击next 点击结束，配置完成。 右键虚拟机点击设置 选择CD&#x2F;DVD，选择使用镜像文件，选择在清华镜像站下载的镜像，点击save 开启虚拟机 18.选择安装CentOS 7，等待加载 使用中文简体，点击继续 点击日期选择上海，点击完成 点击软件选择，选择桌面安装，并选择一些开发工具包，点击完成 点击安装位置，我要分区，点击完成 挂在三个分区，如图，点击完成 点击开始安装，并自己设置用户和root密码，等待系统安装完成。 安装完成，点击重启 点击接受，完成配置 27.登录用户，可选择未列出登录root用户 28.进入系统 29.配置虚拟机ip 配置vmware网络设置 重启虚拟机，测试虚拟机 安装epel-release 注： Extra Packages for Enterprise Linux 是为“红帽系”的操作系统提供额外的软件包，适用于 RHEL、 CentOS 和 Scientific Linux。相当于是一个软件仓库， 大多数 rpm 包在官方repository 中是找不到的） 1yum install -y epel-release 关闭防护墙并防止开机自启 12systemctl stop firewalldsystemctl disable firewalld.service ​ 注意：在企业开发时，通常单个服务器的防火墙时关闭的。公司整体对外会设置 非常安全的防火墙 在&#x2F;opt 目录下创建文件夹 module、software 一般软件安装放在opt目录中。 1mkdir /opt/module /opt/software 删除自带的java SDK 1rpm -qa | grep -i java | xargs -n1 rpm -e --nodeps 自此模板虚拟机安装完成。 百度网盘资料包 链接：https://pan.baidu.com/s/1fa7sHVFdeS6bzzNeEfmnqQ提取码：0xgs","categories":[{"name":"大数据","slug":"大数据","permalink":"http://kks1234.xyz/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"}],"tags":[{"name":"编程","slug":"编程","permalink":"http://kks1234.xyz/tags/%E7%BC%96%E7%A8%8B/"},{"name":"技术","slug":"技术","permalink":"http://kks1234.xyz/tags/%E6%8A%80%E6%9C%AF/"},{"name":"计算机","slug":"计算机","permalink":"http://kks1234.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"JAVA","slug":"JAVA","permalink":"http://kks1234.xyz/tags/JAVA/"}]},{"title":"01虚拟机克隆和软件安装","slug":"大数据/hadoop搭建/01虚拟机克隆和软件安装_repo","date":"2022-06-07T00:00:00.000Z","updated":"2022-06-07T17:01:22.415Z","comments":true,"path":"posts/1329881792.html","link":"","permalink":"http://kks1234.xyz/posts/1329881792.html","excerpt":"","text":"虚拟机克隆和软件安装虚拟机克隆 在电脑创建三个文件夹用来保存虚拟机文件。 右键上节的模板虚拟机，管理，克隆虚拟机 点击next 默认选项，点击next 5.选择完整克隆，点击next 6.名字命名为hadoop101，位置选择创建的文件夹地址，点击next 7.点击finsh，等待克隆完成，不同电脑等待时间不同。 以此再创建两台虚拟机，hadoop102、hadoop103，一共三台虚拟机。 修改每个虚拟机的hostname、和IP地址，并重启。 hadoop101 192.168.88.101hadoop102 192.168.88.102hadoop103 192.168.88.103 验证各个虚拟机的ip和hostname 软件安装 将资源包里的文件传入虚拟机的&#x2F;opt&#x2F;software目录下 将两个压缩文件解压至&#x2F;opt&#x2F;module下 12tar -zxvf jdk-8u212-linux-x64.tar.gz -C /opt/module/tar -zxvf hadoop-3.1.3.tar.gz -C /opt/module/ 下面配置环境变量 创建文件 vim &#x2F;etc&#x2F;profile.d&#x2F;my_env.sh 文件 添加如下的环境变量 1234567#JAVA_HOMEexport JAVA_HOME=/opt/module/jdk1.8.0_212export PATH=$PATH:$JAVA_HOME/bin#HADOOP_HOMEexport HADOOP_HOME=/opt/module/hadoop-3.1.3export PATH=$PATH:$HADOOP_HOME/binexport PATH=$PATH:$HADOOP_HOME/sbin 1source /etc/profile 更新环境变量 测试环境，配置成功 百度网盘资料包 链接：https://pan.baidu.com/s/1fa7sHVFdeS6bzzNeEfmnqQ提取码：0xgs","categories":[{"name":"大数据","slug":"大数据","permalink":"http://kks1234.xyz/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"}],"tags":[{"name":"编程","slug":"编程","permalink":"http://kks1234.xyz/tags/%E7%BC%96%E7%A8%8B/"},{"name":"技术","slug":"技术","permalink":"http://kks1234.xyz/tags/%E6%8A%80%E6%9C%AF/"},{"name":"计算机","slug":"计算机","permalink":"http://kks1234.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"JAVA","slug":"JAVA","permalink":"http://kks1234.xyz/tags/JAVA/"}]},{"title":"02Hadoop目录和运行模式","slug":"大数据/hadoop搭建/02Hadoop目录和运行模式_repo","date":"2022-06-07T00:00:00.000Z","updated":"2022-06-07T17:01:22.415Z","comments":true,"path":"posts/3101278308.html","link":"","permalink":"http://kks1234.xyz/posts/3101278308.html","excerpt":"","text":"Hadoop目录和运行模式Hadoop目录结构： Hadoop重要目录：（1）bin 目录：存放对 Hadoop 相关服务（hdfs，yarn，mapred）进行操作的脚本 （2）etc 目录：Hadoop 的配置文件目录，存放 Hadoop 的配置文件 （3）lib 目录：存放 Hadoop 的本地库（对数据进行压缩解压缩功能） （4）sbin 目录：存放启动或停止 Hadoop 相关服务的脚本 （5）share 目录：存放 Hadoop 的依赖 jar 包、文档、和官方案例 Hadoop运行模式Hadoop 运行模式包括：本地模式、伪分布式模式以及完全分布式模式。 本地模式：单机运行，只是用来演示一下官方案例。生产环境不用。 伪分布式模式：也是单机运行，但是具备 Hadoop 集群的所有功能，一台服务器模 拟一个分布式的环境。个别缺钱的公司用来测试，生产环境不用。 完全分布式模式：多台服务器组成分布式环境。生产环境使用。 我们已经在hadoop101这台虚拟机中安装了hadoop和java，我们可以在虚拟机中对其进行单机测试 首先创建一个文本文件如下： 然后我们运行hadoop自带的一个字符个数统计的demo 1hadoop jar /opt/module/hadoop-3.1.3/share/hadoop/mapreduce/hadoopmapreduce-examples-3.1.3.jar wordcount 1.txt ./output 在output文件夹中查看程序的运行结果： 单机模式测试完成，但实际中我们需要的是完全分布式模式。 完全分布式运行模式是开发的重点，也是我们主要学习的模式，下篇配置三台hadoop集群 我们现在的准备以及后续的准备有： 1）准备 3 台客户机（关闭防火墙、静态 IP、主机名称）√ 2）安装 JDK √ （Hadoop101） 3）配置系统环境变量 √ （Hadoop101） 4）安装 Hadoop √ （Hadoop101） 5）配置 ssh 和分发脚本 6）配置Hadoop环境变量 7）配置集群 8）启动并测试集群 百度网盘资料包 链接：https://pan.baidu.com/s/1fa7sHVFdeS6bzzNeEfmnqQ提取码：0xgs","categories":[{"name":"大数据","slug":"大数据","permalink":"http://kks1234.xyz/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"}],"tags":[{"name":"编程","slug":"编程","permalink":"http://kks1234.xyz/tags/%E7%BC%96%E7%A8%8B/"},{"name":"技术","slug":"技术","permalink":"http://kks1234.xyz/tags/%E6%8A%80%E6%9C%AF/"},{"name":"计算机","slug":"计算机","permalink":"http://kks1234.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"JAVA","slug":"JAVA","permalink":"http://kks1234.xyz/tags/JAVA/"}]},{"title":"03Hadoop集群搭建配置","slug":"大数据/hadoop搭建/03Hadoop集群搭建配置及测试_repo","date":"2022-06-07T00:00:00.000Z","updated":"2022-06-07T17:01:22.415Z","comments":true,"path":"posts/3798968528.html","link":"","permalink":"http://kks1234.xyz/posts/3798968528.html","excerpt":"","text":"Hadoop集群搭建配置至今为止我们做好的准备：1）准备 3 台客户机（关闭防火墙、静态 IP、主机名称）√ 2）安装 JDK √ （Hadoop101） 3）配置系统环境变量 √ （Hadoop101） 4）安装 Hadoop √ （Hadoop101） 5）配置 ssh 和分发脚本 6）配置Hadoop环境变量 7）配置集群 8）启动并测试集群 SSH无密钥登陆的配置​ 首先，为什么需要配置虚拟机之间的无密钥登录，这是因为我们对设置文件的配置，要在各个节点之间统一，所以要频繁进行通信，ssh无密钥登录为配置文件分发脚本服务。 ​ 无密钥的原理是加密中的非对称加密，node1连接node2，需要node1生成公钥和密钥对，然后node1将公钥传输给node2，这样在node1用ssh连接node2时，node2将一段验证文用公钥加密，然后传输给node1，而node1用私钥对其进行解密，传输给node2，node2收到解密后的验证后和自己发送的验证进行对比，如果一样这样就唯一确定了node1的身份，就可以直接连接。 生成公钥和私钥 进入 目录， 1ssh-keygen -t rsa 三次回车， 生成两个文件 id_rsa（私钥）、id_rsa.pub（公钥） 将公钥拷贝到要免密登录的目标机器上 12345ssh-copy-id [user@]hadoop101ssh-copy-id [user@]hadoop102ssh-copy-id [user@]hadoop103ssh -v [user@]hadoop101 #测试 在另外两台机器上也同时配置一下ssh无密钥登录。 编写集群分发脚本 xsyncSCP scp（secure copy）安全拷贝可以实现服务器与服务器之间的数据拷贝。 基本语法 实际操作 将Hadoop101虚拟机上的&#x2F;opt下的module拷贝到另外两台虚拟机，也就是java和hadoop软件包。 12scp -r /opt/module/* root@hadoop102:/opt/modulescp -r /opt/module/* root@hadoop103:/opt/module rsync 远程同步工具​ rsync 主要用于备份和镜像。具有速度快、避免复制相同内容和支持符号链接的优点。 ​ rsync 和 scp 区别：用 rsync 做文件的复制要比 scp 的速度快，rsync 只对差异文件做更 新。scp 是把所有文件都复制过去。 基本语法 自己编写xsync 集群分发脚本(尚硅谷)1vim /usr/bin/xync 脚本内容不做解释 12345678910111213141516171819202122232425262728293031#!/bin/bash#1 arguments countif [ $# -lt 1 ]then echo Not Enough Arguement! exit;fi#2.foreach filesfor host in hadoop101 hadoop102 hadoop103do echo ==================== $host ==================== #3.foreach dir for file in $@ do #4. file if exit if [ -e $file ] then #5. get father dir pdir=$(cd -P $(dirname $file); pwd) #6.get file name fname=$(basename $file) ssh $host &quot;mkdir -p $pdir&quot; rsync -av $pdir/$fname $host:$pdir else echo $file does not exists! fi donedone 修改权限 1chmod +x xsync 测试脚本 1xsync /usr/bin 同步之前的环境变量配置 1xsync /etc/profile.d/my_env.sh 在Hadoop102和103上重新加载环境变量 1source /etc/profile 全分布式配置​ 全部脚本和环境已经准备好，这样我们再三台虚拟机上就都有了java和hadoop环境，都可以单机模式运行，但我们要配置的为全分布式模式，要配置完全分布式模式需要我们对集群的具体hadoop环境部署进行规划，在本例中采用以下的规划方法。 hadoop101 hadoop102 hadoop103 HDFS NameNode、DataNode DataNode SecondaryNameNode、DataNode YARN NodeManager ResourceManager、NodeManager NodeManager 配置文件说明​ Hadoop 配置文件分两类：默认配置文件和自定义配置文件，只有用户想修改某一默认配置值时，才需要修改自定义配置文件，更改相应属性值。 默认配置文件： 默认配置文件的内容也可以在官网的文档中获取。 自定义配置文件 ：core-site.xml、 hdfs-site.xml、 yarn-site.xml、 mapred-site.xml 四个配置文件存放在$HADOOP_HOME&#x2F;etc&#x2F;hadoop 这个路径上， 用户可以根据项目需求重新进行修改配置。 配置集群 配置 core-site.xml 12345678910111213141516171819&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;&lt;configuration&gt; &lt;!-- 指定 NameNode 的地址 --&gt; &lt;property&gt; &lt;name&gt;fs.defaultFS&lt;/name&gt; &lt;value&gt;hdfs://hadoop101:8020&lt;/value&gt; &lt;/property&gt; &lt;!-- 指定 hadoop 数据的存储目录 --&gt; &lt;property&gt; &lt;name&gt;hadoop.tmp.dir&lt;/name&gt; &lt;value&gt;/opt/module/hadoop-3.1.3/data&lt;/value&gt; &lt;/property&gt; &lt;!-- 配置 HDFS 网页登录使用的静态用户为 root --&gt; &lt;property&gt; &lt;name&gt;hadoop.http.staticuser.user&lt;/name&gt; &lt;value&gt;root&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt; 配置 hdfs-site.xml 1234567891011121314&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;&lt;configuration&gt; &lt;!-- nn web 端访问地址--&gt; &lt;property&gt; &lt;name&gt;dfs.namenode.http-address&lt;/name&gt; &lt;value&gt;hadoop101:9870&lt;/value&gt; &lt;/property&gt; &lt;!-- 2nn web 端访问地址--&gt; &lt;property&gt; &lt;name&gt;dfs.namenode.secondary.http-address&lt;/name&gt; &lt;value&gt;hadoop103:9868&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt; 配置 yarn-site.xml 123456789101112131415161718192021222324252627282930313233343536&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;&lt;configuration&gt; &lt;property&gt; &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt; &lt;value&gt;mapreduce_shuffle&lt;/value&gt; &lt;description&gt;指定 MR 走 shuffle&lt;/description&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt; &lt;value&gt;hadoop102&lt;/value&gt; &lt;description&gt;指定 ResourceManager 的地址&lt;/description&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.nodemanager.env-whitelist&lt;/name&gt; &lt;value&gt;JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CO NF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAP RED_HOME&lt;/value&gt; &lt;description&gt;环境变量的继承&lt;/description&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.scheduler.minimum-allocation-mb&lt;/name&gt; &lt;value&gt;512&lt;/value&gt; &lt;description&gt;为每个容器请求分配的最小内存限制资源管理器（512M）&lt;/description&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.scheduler.maximum-allocation-mb&lt;/name&gt; &lt;value&gt;4096&lt;/value&gt; &lt;description&gt;为每个容器请求分配的最大内存限制资源管理器（4G）&lt;/description&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.nodemanager.vmem-pmem-ratio&lt;/name&gt; &lt;value&gt;4&lt;/value&gt; &lt;description&gt;虚拟内存比例，默认为2.1，此处设置为4倍&lt;/description&gt; &lt;/property&gt; &lt;/configuration&gt; 配置 mapred-site.xml 123456789101112131415161718192021222324&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;&lt;configuration&gt; &lt;property&gt; &lt;name&gt;mapreduce.framework.name&lt;/name&gt; &lt;value&gt;yarn&lt;/value&gt; &lt;description&gt;执行MapReduce的方式：yarn/local&lt;/description&gt; &lt;/property&gt; &lt;!-- 不配置在报错--&gt; &lt;property&gt; &lt;name&gt;yarn.app.mapreduce.am.env&lt;/name&gt; &lt;value&gt;HADOOP_MAPRED_HOME=/opt/module/hadoop-3.1.3&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;mapreduce.map.env&lt;/name&gt; &lt;value&gt;HADOOP_MAPRED_HOME=/opt/module/hadoop-3.1.3&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;mapreduce.reduce.env&lt;/name&gt; &lt;value&gt;HADOOP_MAPRED_HOME=/opt/module/hadoop-3.1.3&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt; 配置workers # 删除第一行localhost，然后添加以下三行 hadoop101 hadoop102 hadoop103 分发配置文件1xsync /opt/module/hadoop-3.1.3/etc/hadoop/ 查看分发情况，确保配置文件被修改成功。 发起集群启动集群 如果集群是第一次启动，需要在 hadoop101 节点格式化 NameNode。（注意： 格式化 NameNode， 会产生新的集群 id， 导致 NameNode 和 DataNode 的集群 id 不一致，集群找不到已往数据。 如果集群在运行过程中报错，需要重新格式化 NameNode 的话， 一定要先停止 namenode 和 datanode 进程， 并且要删除所有机器的 data 和 logs 目录，然后再进行格式化。 ） 1hdfs namenode -format 进入&#x2F;opt&#x2F;module&#x2F;hadoop-3.1.3目录，启动 HDFS 1sbin/start-dfs.sh 会发现报错 这是因为我们使用的root用户启动，所以把sbin下的start-dfs.sh、stop-dfs.sh添加如下内容。 1234HDFS_DATANODE_USER=rootHDFS_DATANODE_SECURE_USER=hdfsHDFS_NAMENODE_USER=rootHDFS_SECONDARYNAMENODE_USER=root 同时也在sbin下的start-yarn.sh、stop-yarn.sh添加如下内容。 123YARN_RESOURCEMANAGER_USER=rootHADOOP_SECURE_DN_USER=yarnYARN_NODEMANAGER_USER=root 分发脚本 1xsync ./sbin/ 再次启动dfs，成功。 在配置了 ResourceManager 的节点（hadoop102） 启动 YARN 1sbin/start-yarn.sh 启动成功。 Web 端查看 HDFS 的 NameNode（a）浏览器中输入： http://hadoop101:9870（b）查看 HDFS 上存储的数据信息 Web 端查看 YARN 的 ResourceManager （a）浏览器中输入： http://hadoop102:8088 （b）查看 YARN 上运行的 Job 信息 查看进行，启动信息符合前面的表格设计。 集群基本测试 普通命令测试 12345#上传文件 1.txt是单机测试用例中的字符文本hadoop fs -put 1.txt /hadoop fs -put /opt/software/hadoop-3.1.3.tar.gz /#统计字数测试hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount /1.txt /output 启动写入基准测试 12#测试10个文件，每个文件50M，一共500Mhadoop jar /opt/module/hadoop-3.1.3/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-3.1.3-tests.jar TestDFSIO -write -nrFiles 10 -fileSize 50MB 测试读取速度 12#测试10个文件，每个文件50M，一共500Mhadoop jar /opt/module/hadoop-3.1.3/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-3.1.3-tests.jar TestDFSIO -read -nrFiles 10 -fileSize 50MB 测试期间，会在HDFS集群上创建 &#x2F;benchmarks目录，测试完毕后，我们可以清理该目录。 1hadoop jar /opt/module/hadoop-3.1.3/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-3.1.3-tests.jar TestDFSIO -clean 百度网盘资料包 链接：https://pan.baidu.com/s/1fa7sHVFdeS6bzzNeEfmnqQ提取码：0xgs","categories":[{"name":"大数据","slug":"大数据","permalink":"http://kks1234.xyz/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"}],"tags":[{"name":"编程","slug":"编程","permalink":"http://kks1234.xyz/tags/%E7%BC%96%E7%A8%8B/"},{"name":"技术","slug":"技术","permalink":"http://kks1234.xyz/tags/%E6%8A%80%E6%9C%AF/"},{"name":"计算机","slug":"计算机","permalink":"http://kks1234.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"JAVA","slug":"JAVA","permalink":"http://kks1234.xyz/tags/JAVA/"}]},{"title":"04Hadoop功能完善","slug":"大数据/hadoop搭建/04Hadoop功能完善_repo","date":"2022-06-07T00:00:00.000Z","updated":"2022-06-07T17:01:22.415Z","comments":true,"path":"posts/3480485341.html","link":"","permalink":"http://kks1234.xyz/posts/3480485341.html","excerpt":"","text":"Hadoop功能完善配置历史服务器​ 为了查看程序的历史运行情况，需要配置一下历史服务器。具体配置步骤如下： 1） 配置 mapred-site.xml 1vim mapred-site.xml 在该文件里面增加如下配置。 1234567891011&lt;!-- 因为yarn安装在Hadoop102机器 --&gt;&lt;!-- 历史服务器端地址 --&gt;&lt;property&gt;&lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt;&lt;value&gt;hadoop102:10020&lt;/value&gt;&lt;/property&gt;&lt;!-- 历史服务器 web 端地址 --&gt;&lt;property&gt;&lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt;&lt;value&gt;hadoop102:19888&lt;/value&gt;&lt;/property&gt; 2） 分发配置 1xsync /opt/module/hadoop-3.1.3/etc/hadoop/mapred-site.xml 3） 在 hadoop102 启动历史服务器 1/opt/module/hadoop-3.1.3/bin/mapred --daemon start historyserver 4） 查看历史服务器是否启动 1jps 5） 查看 JobHistory http://hadoop102:19888/jobhistory 配置日志的聚集日志聚集概念：应用运行完成以后，将程序运行日志信息上传到 HDFS 系统上。 日志聚集功能好处：可以方便的查看到程序运行详情，方便开发调试。注意：开启日志聚集功能， 需要重新启动 NodeManager 、 ResourceManager 和HistoryServer。 1） 配置 yarn-site.xml 1vim yarn-site.xml 在该文件里面增加如下配置。 123456789101112131415&lt;!-- 开启日志聚集功能 --&gt;&lt;property&gt;&lt;name&gt;yarn.log-aggregation-enable&lt;/name&gt;&lt;value&gt;true&lt;/value&gt;&lt;/property&gt;&lt;!-- 设置日志聚集服务器地址 --&gt;&lt;property&gt;&lt;name&gt;yarn.log.server.url&lt;/name&gt;&lt;value&gt;http://hadoop102:19888/jobhistory/logs&lt;/value&gt;&lt;/property&gt;&lt;!-- 设置日志保留时间为 7 天 --&gt;&lt;property&gt;&lt;name&gt;yarn.log-aggregation.retain-seconds&lt;/name&gt;&lt;value&gt;604800&lt;/value&gt;&lt;/property&gt; 2） 分发配置 1xsync /opt/module/hadoop-3.1.3/etc/hadoop/yarn-site.xml 3） 关闭 NodeManager 、 ResourceManager 和 HistoryServer 12mapred --daemon stop historyserversbin/stop-yarn.sh 4） 启动 NodeManager 、 ResourceManage 和 HistoryServer 12sbin/tart-yarn.shmapred --daemon start historyserver 5） 执行 WordCount 程序 1hadoop jar ./share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount /1.txt /out2 6） 查看日志 集群启动&#x2F;停止方式总结1） 各个模块分开启动&#x2F;停止（配置 ssh 是前提） 常用 （1）整体启动&#x2F;停止 HDFS 1start-dfs.sh/stop-dfs.sh （2）整体启动&#x2F;停止 YARN 1start-yarn.sh/stop-yarn.sh 2） 各个服务组件逐一启动&#x2F;停止 （1）分别启动&#x2F;停止 HDFS 组件 1hdfs --daemon start/stop namenode/datanode/secondarynamenode （2）启动&#x2F;停止 YARN 1yarn --daemon start/stop resourcemanager/nodemanager 编写 Hadoop 集群常用脚本1） Hadoop 集群启停脚本（包含 HDFS， Yarn， Historyserver）： myhadoop 12cd /binvim myhadoop 输入： 12345678910111213141516171819202122232425262728293031#!/bin/bashif [ $# -lt 1 ]thenecho &quot;No Args Input...&quot;exit ;ficase $1 in&quot;start&quot;)echo &quot; =================== 启动 hadoop 集群 ===================&quot;echo &quot; --------------- 启动 hdfs ---------------&quot;ssh hadoop101 &quot;/opt/module/hadoop-3.1.3/sbin/start-dfs.sh&quot;echo &quot; --------------- 启动 yarn ---------------&quot;ssh hadoop102 &quot;/opt/module/hadoop-3.1.3/sbin/start-yarn.sh&quot;echo &quot; --------------- 启动 historyserver ---------------&quot;ssh hadoop102 &quot;/opt/module/hadoop-3.1.3/bin/mapred --daemon starthistoryserver&quot;;;&quot;stop&quot;)echo &quot; =================== 关闭 hadoop 集群 ===================&quot;echo &quot; --------------- 关闭 historyserver ---------------&quot;ssh hadoop102 &quot;/opt/module/hadoop-3.1.3/bin/mapred --daemon stophistoryserver&quot;echo &quot; --------------- 关闭 yarn ---------------&quot;ssh hadoop102 &quot;/opt/module/hadoop-3.1.3/sbin/stop-yarn.sh&quot;echo &quot; --------------- 关闭 hdfs ---------------&quot;ssh hadoop101 &quot;/opt/module/hadoop-3.1.3/sbin/stop-dfs.sh&quot;;;*)echo &quot;Input Args Error...&quot;;;esac 加权脚本： 1chmod +x myhadoop 2）查看三台服务器 Java 进程脚本： jpsall 12cd /binvim jpsall 输入： 123456#!/bin/bashfor host in hadoop101 hadoop102 hadoop103doecho =============== $host ===============ssh $host jpsdone 加权脚本： 1chmod +x jpsall 3）分发&#x2F;bin 目录，保证自定义脚本在三台机器上都可以使用 1xsync /bin/ 常用端口号说明 集群时间同步​ 如果服务器在公网环境（能连接外网），可以不采用集群时间同步，因为服务器会定期和公网时间进行校准；​ 如果服务器在内网环境，必须要配置集群时间同步，否则时间久了，会产生时间偏差，导致集群执行任务时间不同步。 1）需求 ​ 找一个机器，作为时间服务器，所有的机器与这台集群时间进行定时的同步， 生产环境根据任务对时间的准确程度要求周期同步。 测试环境为了尽快看到效果，采用 1 分钟同步一次。 2） 时间服务器配置（必须 root 用户） （1） 查看所有节点 ntpd 服务状态和开机自启动状态 123sudo systemctl status ntpdsudo systemctl start ntpdsudo systemctl is-enabled ntpd （2）修改 hadoop101 的 ntp.conf 配置文件 1sudo vim /etc/ntp.conf （a） 修改 1（授权 192.168.88.0-192.168.88.255 网段上的所有机器可以从这台机器上查询和同步时间） restrict 192.168.10.0 mask 255.255.255.0 nomodify notrap （b） 修改 2（集群在局域网中，不使用其他互联网上的时间） 注释掉 #server 0.centos.pool.ntp.org iburst#server 1.centos.pool.ntp.org iburst#server 2.centos.pool.ntp.org iburst#server 3.centos.pool.ntp.org iburst （c） 添加 3（当该节点丢失网络连接，依然可以采用本地时间作为时间服务器为集群中的其他节点提供时间同步） （3）修改 hadoop102 的&#x2F;etc&#x2F;sysconfig&#x2F;ntpd 文件 1sudo vim /etc/sysconfig/ntpd 增加内容如下（让硬件时间与系统时间一起同步） SYNC_HWCLOCK&#x3D;yes （4）重新启动 ntpd 服务 、设置 ntpd 服务开机启动 12sudo systemctl start ntpdsudo systemctl enable ntpd 3） 其他机器配置（必须 root 用户） （1） 关闭所有节点上 ntp 服务和自启动 12sudo systemctl stop ntpdsudo systemctl disable ntpd （2）在其他机器配置 1 分钟与时间服务器同步一次 1sudo crontab -e 编写定时任务如下： ***&#x2F;1 * * * * &#x2F;usr&#x2F;sbin&#x2F;ntpdate hadoop102** （3）修改任意机器时间 1sudo date -s &quot;2021-9-11 11:11:11&quot; （4） 1 分钟后查看机器是否与时间服务器同步 1sudo date 百度网盘资料包 链接：https://pan.baidu.com/s/1fa7sHVFdeS6bzzNeEfmnqQ提取码：0xgs","categories":[{"name":"大数据","slug":"大数据","permalink":"http://kks1234.xyz/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"}],"tags":[{"name":"编程","slug":"编程","permalink":"http://kks1234.xyz/tags/%E7%BC%96%E7%A8%8B/"},{"name":"技术","slug":"技术","permalink":"http://kks1234.xyz/tags/%E6%8A%80%E6%9C%AF/"},{"name":"计算机","slug":"计算机","permalink":"http://kks1234.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"JAVA","slug":"JAVA","permalink":"http://kks1234.xyz/tags/JAVA/"}]},{"title":"Hadoop概论","slug":"大数据/大数据概论/Hadoop概论_repo","date":"2022-05-26T00:00:00.000Z","updated":"2022-06-07T17:01:22.415Z","comments":true,"path":"posts/2793300014.html","link":"","permalink":"http://kks1234.xyz/posts/2793300014.html","excerpt":"","text":"Hadoop概论Hadoop的定义​ Hadoop是一个由Apache基金会所开发的分布式系统基础架构。用户可以在不了解分布式底层细节的情况下，开发分布式程序。充分利用集群的威力进行高速运算和存储。Hadoop实现了一个分布式文件系统（ Distributed File System），其中一个组件是HDFS（Hadoop Distributed File System）。HDFS有高容错性的特点，并且设计用来部署在低廉的（low-cost）硬件上；而且它提供高吞吐量（high throughput）来访问应用程序的数据，适合那些有着超大数据集（large data set）的应用程序。HDFS放宽了（relax）POSIX的要求，可以以流的形式访问（streaming access）文件系统中的数据。Hadoop的框架最核心的设计就是：HDFS和MapReduce。HDFS为海量的数据提供了存储，而MapReduce则为海量的数据提供了计算 。(百度百科) Hadoop的诞生 ​ Hadoop 三大发行版本：Apache、Cloudera、Hortonworks。 ​ Apache 版本最原始（最基础）的版本，对于入门学习最好。2006​ Cloudera 内部集成了很多大数据框架，对应产品 CDH。2008​ Hortonworks 文档较好，对应产品 HDP。2011​ Hortonworks 现在已经被 Cloudera 公司收购，推出新的品牌 CDP。 2018​ 2021宣布所有版本收费 Hadoop的地位 大数据生态圈 由此可见，Hadoop位于整个大数据生态圈的最底层，是学习整个大数据框架的关键。 Hadoop的技术架构 架构图 现版本为3.x.x，其技术架构和2.0相同。 主要技术框架： ​ Hadoop Distributed File System，简称 HDFS，是一个分布式文件系统。 用于存储文件，通过目录树来定位文件；其次，它是分布式的，由很多服务器联合起来实现其功能，集群中的服务器有各自的角色。 ​ MapReduce 是一个分布式运算程序的编程框架，是用户开发“基于 Hadoop 的数据分析应用”的核心框架。 ​ Yarn是一个资源调度平台，负责为运算程序提供服务器运算资源，相当于一个分布式的操作系统平台，而 MapReduce 等运算程序则相当于运行于操作系统之上的应用程序。 Hadoop特点 参考链接：https://blog.csdn.net/qq_42937522/article/details/121016314","categories":[{"name":"大数据","slug":"大数据","permalink":"http://kks1234.xyz/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"}],"tags":[{"name":"编程","slug":"编程","permalink":"http://kks1234.xyz/tags/%E7%BC%96%E7%A8%8B/"},{"name":"技术","slug":"技术","permalink":"http://kks1234.xyz/tags/%E6%8A%80%E6%9C%AF/"},{"name":"计算机","slug":"计算机","permalink":"http://kks1234.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"JAVA","slug":"JAVA","permalink":"http://kks1234.xyz/tags/JAVA/"}]},{"title":"大数据概论","slug":"大数据/大数据概论/大数据概论-repo","date":"2022-05-25T00:00:00.000Z","updated":"2022-06-07T17:01:22.415Z","comments":true,"path":"posts/37908005.html","link":"","permalink":"http://kks1234.xyz/posts/37908005.html","excerpt":"","text":"大数据概论什么是大数据？​ 大数据(big data)，或称巨量资料，指的是所涉及的资料量规模巨大到无法透过目前主流软件工具，在合理时间内达到撷取、管理、处理、并整理成为帮助企业经营决策更积极目的的资讯。 ​ 在维克托·迈尔-舍恩伯格维克托·迈尔-舍恩伯格)及肯尼斯·库克耶编写的《大数据时代》 [1] 中大数据指不用随机分析法、抽样调查这样捷径，而采用所有数据进行分析处理。(百度百科) 大数据的5V特点Volume（大量）、Velocity（高速）、Variety（多样）、Value（低价值密度）、Veracity（真实性）。 Volume：即数据量大 Velocity：即数据增长速度快 Variety：即种类和来源多样 Value：即信息的价值密度低 Veracity：即数据可信度高、真实性高 大数据的应用场景 制造业，利用工业大数据提升制造业水平，包括产品故障诊断与预测、分析工艺流程、改进生产工艺，优化生产过程能耗、工业供应链分析与优化、生产计划与排程。 金融行业，大数据在高频交易、社交情绪分析和信贷风险分析三大金融创新领域发挥重大作用。 汽车行业，利用大数据和物联网技术的无人驾驶汽车，在不远的未来将走入我们的日常生活。 互联网行业，借助于大数据技术，可以分析客户行为，进行商品推荐和针对性广告投放。 电信行业，利用大数据技术实现客户离网分析，及时掌握客户离网倾向，出台客户挽留措施。 能源行业，随着智能电网的发展，电力公司可以掌握海量的用户用电信息，利用大数据技术分析用户用电模式，可以改进电网运行，合理设计电力需求响应系统，确保电网运行安全。 物流行业，利用大数据优化物流网络，提高物流效率，降低物流成本。 城市管理，可以利用大数据实现智能交通、环保监测、城市规划和智能安防。 生物医学，大数据可以帮助我们实现流行病预测、智慧医疗、健康管理，同时还可以帮助我们解读DNA,了解更多的生命奥秘。 体育娱乐，大数据可以帮助我们训练球队，决定投拍哪种题财的影视作品，以及预测比赛结果。 安全领域，政府可以利用大数据技术构建起强大的国家安全保障体系，企业可以利用大数据抵御网络攻击，警察可以借助大数据来预防犯罪。 个人生活， 大数据还可以应用于个人生活，利用与每个人相关联的“个人大数据”，分析个人生活行为习惯，为其提供更加周到的个性化服务。 大数据分析流程 大数据技术生态体系 1） Sqoop： Sqoop 是一款开源的工具，主要用于在 Hadoop、 Hive 与传统的数据库（MySQL）间进行数据的传递，可以将一个关系型数据库（例如 ： MySQL， Oracle 等）中的数据导进到 Hadoop 的 HDFS 中，也可以将 HDFS 的数据导进到关系型数据库中。2） Flume： Flume 是一个高可用的，高可靠的，分布式的海量日志采集、聚合和传输的系统，Flume 支持在日志系统中定制各类数据发送方，用于收集数据；3） Kafka： Kafka 是一种高吞吐量的分布式发布订阅消息系统； 4） Spark： Spark 是当前最流行的开源大数据内存计算框架。可以基于 Hadoop 上存储的大数据进行计算。5） Flink： Flink 是当前最流行的开源大数据内存计算框架。 用于实时计算的场景较多。6） Oozie： Oozie 是一个管理 Hadoop 作业（job）的工作流程调度管理系统。7）Hbase： HBase 是一个分布式的、面向列的开源数据库。 HBase 不同于一般的关系数据库，它是一个适合于非结构化数据存储的数据库。8） Hive： Hive 是基于 Hadoop 的一个数据仓库工具，可以将结构化的数据文件映射为一张数据库表，并提供简单的 SQL 查询功能，可以将 SQL 语句转换为 MapReduce 任务进行运行。其优点是学习成本低，可以通过类 SQL 语句快速实现简单的 MapReduce 统计，不必开发专门的 MapReduce 应用，十分适合数据仓库的统计分析。9）ZooKeeper：它是一个针对大型分布式系统的可靠协调系统，提供的功能包括：配置维护、名字服务、分布式同步、组服务等。 参考链接：https://www.jianshu.com/p/1c3e7b416ba7","categories":[{"name":"大数据","slug":"大数据","permalink":"http://kks1234.xyz/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"}],"tags":[{"name":"编程","slug":"编程","permalink":"http://kks1234.xyz/tags/%E7%BC%96%E7%A8%8B/"},{"name":"技术","slug":"技术","permalink":"http://kks1234.xyz/tags/%E6%8A%80%E6%9C%AF/"},{"name":"计算机","slug":"计算机","permalink":"http://kks1234.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"JAVA","slug":"JAVA","permalink":"http://kks1234.xyz/tags/JAVA/"}]}],"categories":[{"name":"大数据","slug":"大数据","permalink":"http://kks1234.xyz/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"}],"tags":[{"name":"编程","slug":"编程","permalink":"http://kks1234.xyz/tags/%E7%BC%96%E7%A8%8B/"},{"name":"技术","slug":"技术","permalink":"http://kks1234.xyz/tags/%E6%8A%80%E6%9C%AF/"},{"name":"计算机","slug":"计算机","permalink":"http://kks1234.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"JAVA","slug":"JAVA","permalink":"http://kks1234.xyz/tags/JAVA/"}]}